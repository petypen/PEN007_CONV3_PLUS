// @strict-types
#Область ПрограммныйИнтерфейс

// Тип правила конвертации по свойству.
// 
// Параметры:
//  Свойство - СправочникСсылка.Свойства - Свойство объекта
// 
// Возвращаемое значение:
//  Строка - Тип правила конвертации по свойству, например
//    ПравилаКонвертацииОбъектов, ПравилаКонвертацииПредопределенныхДанных
Функция ТипПравилаКонвертацииПоСвойству(Свойство) Экспорт
	Возврат PEN007_ОбщегоНазначения.ТипПравилаКонвертацииПоСвойству(Свойство);
КонецФункции

// Ссылка на правило конвертации по его наименованию.
// 
// Параметры:
//  НаименованиеПравила - Строка - Наименование правила конвертации
//  ТипПКО - Строка - Тип ПКО, см. ТипПравилаКонвертацииПоСвойству
// 
// Возвращаемое значение:
//  - СправочникСсылка.ПравилаКонвертацииОбъектов
//  - СправочникСсылка.ПравилаКонвертацииПредопределенныхДанных - Ссылка на правило конвртации
Функция СсылкаНаПКО(НаименованиеПравила, ТипПКО) Экспорт
	
//TODO требуется выбирать даннные с учетом справочника Составы конвертаций

	МенеджерСправочника = Справочники[ТипПКО];
	СсылкаНаПКО = МенеджерСправочника.НайтиПоКоду(НаименованиеПравила);

	Возврат СсылкаНаПКО;
КонецФункции
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Ссылка на конвертацию, которая определена по правилу ПКС или ПКО.
// 
// Параметры:
//  ПравилоКонвертации 	- СправочникСсылка.ПравилаКонвертацииОбъектов - ПКО
//    					- СправочникСсылка.ПравилаКонвертацииСвойств - ПКС
//    					- СправочникСсылка.ПравилаОбработкиДанных - ПОД
//    					- СправочникСсылка.ПравилаКонвертацииПредопределенныхДанных - ПКПД
// 
// Возвращаемое значение:
//  СправочникСсылка.Конвертации - ссылка на конвертацию, которая определена по правилу
Функция КонвертацияПоПравилу(ПравилоКонвертации)

	Конвертация = Справочники.Конвертации.ПустаяСсылка();

	Если ТипЗнч(ПравилоКонвертации) = Тип("СправочникСсылка.ПравилаКонвертацииСвойств") Тогда
		Владелец = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПравилоКонвертации, "Владелец");
		ПКСсылка = Владелец;
	Иначе
		ПКСсылка = ПравилоКонвертации;
	КонецЕсли;

	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
				   |	Составы.Владелец КАК Конвертация
				   |ИЗ
				   |	Справочник.СоставыКонвертаций КАК Составы
				   |ГДЕ
				   |	Составы.ЭлементКонвертации = &ПКСсылка";

	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		ВыборкаЗапроса = РезультатЗапроса.Выбрать();
		ВыборкаЗапроса.Следующий();
		Конвертация = ВыборкаЗапроса.Конвертация;
	КонецЕсли;

	Возврат Конвертация;
КонецФункции

// Ссылка на ПКО конкретной конвертации по идентификатору правила.
// 
// Параметры:
//  ПКОИдентификатор - Строка - Идентификатор ПКО (реквизит Код)
//  Конвертация - СправочникСсылка.Конвертации - Конвертация
// 
// Возвращаемое значение:
//  СправочникСсылка.ПравилаКонвертацииОбъектов - Ссылка на ПКО конкретной конвертации по идентификатору правила
Функция ПКОКонвертацииПоИдентификатору(ПКОИдентификатор, Конвертация)
	
	ПКО = Справочники.ПравилаКонвертацииОбъектов.ПустаяСсылка();
	
	Возврат ПКО;	
КонецФункции

#КонецОбласти