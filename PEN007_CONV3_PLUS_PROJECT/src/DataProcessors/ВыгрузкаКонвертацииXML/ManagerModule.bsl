#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

&ИзменениеИКонтроль("ВыгрузитьРеквизитыКонвертации")
Процедура PEN007_ВыгрузитьРеквизитыКонвертации(мЗаписьXML, ОбщиеПеременные)
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить("Наименование");
	МассивРеквизитов.Добавить("Конфигурация");
	МассивРеквизитов.Добавить("КонфигурацияКорреспондент");
	МассивРеквизитов.Добавить("АлгоритмПослеЗагрузкиПравилОбмена");
	МассивРеквизитов.Добавить("АлгоритмПередПолучениемИзмененныхОбъектов");
	МассивРеквизитов.Добавить("АлгоритмПослеПолученияИнформацииОбУзлахОбмена");
	МассивРеквизитов.Добавить("АлгоритмПередВыгрузкойДанных");
	МассивРеквизитов.Добавить("АлгоритмПослеВыгрузкиДанных");
	МассивРеквизитов.Добавить("АлгоритмПередВыгрузкойОбъекта");
	МассивРеквизитов.Добавить("АлгоритмПередКонвертациейОбъекта");
	МассивРеквизитов.Добавить("АлгоритмПослеВыгрузкиОбъекта");
	МассивРеквизитов.Добавить("АлгоритмПередЗагрузкойОбъекта");
	МассивРеквизитов.Добавить("АлгоритмПослеЗагрузкиОбъекта");
	МассивРеквизитов.Добавить("АлгоритмПередОтправкойИнформацииОбУдалении");
	МассивРеквизитов.Добавить("АлгоритмПриПолученииИнформацииОбУдалении");
	МассивРеквизитов.Добавить("АлгоритмПослеЗагрузкиПараметров");
	МассивРеквизитов.Добавить("АлгоритмПередЗагрузкойДанных");
	МассивРеквизитов.Добавить("АлгоритмПослеЗагрузкиДанных");


	ДанныеКонвертации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОбщиеПеременные.Конвертация,
		МассивРеквизитов);
	ОбщиеПеременные.Вставить("Конфигурация", ДанныеКонвертации.Конфигурация);
	ОбщиеПеременные.Вставить("КонфигурацияКорреспондент", ДанныеКонвертации.КонфигурацияКорреспондент);

	мЗаписьXML.ЗаписатьНачалоЭлемента("ВерсияФормата");
	Стр = XMLСтрока("2.01");
	мЗаписьXML.ЗаписатьТекст(Стр);
	мЗаписьXML.ЗаписатьКонецЭлемента();
	ДобавитьЭлемент("Ид", Строка(ОбщиеПеременные.Конвертация.УникальныйИдентификатор()), мЗаписьXML);
	ДобавитьЭлемент("Наименование",      Строка(ДанныеКонвертации.Наименование), мЗаписьXML);
	ДобавитьЭлемент("ДатаВремяСоздания", ТекущаяДатаСеанса(), мЗаписьXML);

	ВыгрузитьДанныеПоКонфигурации("Источник", ДанныеКонвертации.Конфигурация, мЗаписьXML);
	ВыгрузитьДанныеПоКонфигурации("Приемник", ДанныеКонвертации.КонфигурацияКорреспондент, мЗаписьXML);


	// События конвертации.
	ДобавитьЭлемент("ПослеЗагрузкиПравилОбмена",     Строка(ДанныеКонвертации.АлгоритмПослеЗагрузкиПравилОбмена), мЗаписьXML);
	ДобавитьЭлемент("ПередПолучениемИзмененныхОбъектов",     Строка(ДанныеКонвертации.АлгоритмПередПолучениемИзмененныхОбъектов), мЗаписьXML);
	ДобавитьЭлемент("ПослеПолученияИнформацииОбУзлахОбмена",  Строка(ДанныеКонвертации.АлгоритмПослеПолученияИнформацииОбУзлахОбмена), мЗаписьXML);

	ДобавитьЭлемент("ПередВыгрузкойДанных",     Строка(ДанныеКонвертации.АлгоритмПередВыгрузкойДанных), мЗаписьXML);
	ДобавитьЭлемент("ПослеВыгрузкиДанных",      Строка(ДанныеКонвертации.АлгоритмПослеВыгрузкиДанных), мЗаписьXML);

	ДобавитьЭлемент("ПередЗагрузкойДанных",     Строка(ДанныеКонвертации.АлгоритмПередЗагрузкойДанных), мЗаписьXML);
	ДобавитьЭлемент("ПослеЗагрузкиДанных",      Строка(ДанныеКонвертации.АлгоритмПослеЗагрузкиДанных), мЗаписьXML);

	ДобавитьЭлемент("ПередВыгрузкойОбъекта",    Строка(ДанныеКонвертации.АлгоритмПередВыгрузкойОбъекта), мЗаписьXML);
	ДобавитьЭлемент("ПередКонвертациейОбъекта", Строка(ДанныеКонвертации.АлгоритмПередКонвертациейОбъекта), мЗаписьXML);

	ДобавитьЭлемент("ПослеВыгрузкиОбъекта",     Строка(ДанныеКонвертации.АлгоритмПослеВыгрузкиОбъекта), мЗаписьXML);
	ДобавитьЭлемент("ПередЗагрузкойОбъекта",    Строка(ДанныеКонвертации.АлгоритмПередЗагрузкойОбъекта), мЗаписьXML);
	ДобавитьЭлемент("ПослеЗагрузкиОбъекта",     Строка(ДанныеКонвертации.АлгоритмПослеЗагрузкиОбъекта), мЗаписьXML);

	ДобавитьЭлемент("ПередОтправкойИнформацииОбУдалении",   Строка(ДанныеКонвертации.АлгоритмПередОтправкойИнформацииОбУдалении), мЗаписьXML);
	ДобавитьЭлемент("ПриПолученииИнформацииОбУдалении",     Строка(ДанныеКонвертации.АлгоритмПриПолученииИнформацииОбУдалении), мЗаписьXML);

	ДобавитьЭлемент("ПослеЗагрузкиПараметров",     Строка(ДанныеКонвертации.АлгоритмПослеЗагрузкиПараметров), мЗаписьXML);

	// Выгрузка параметров конвертации
	мЗаписьXML.ЗаписатьНачалоЭлемента("Параметры");
	Запрос = Новый Запрос;
	#Удаление
	Запрос.Текст = "ВЫБРАТЬ
	|	Параметр КАК Имя,
	|	ИспользуетсяПриЗагрузке КАК ИспользуетсяПриЗагрузке,
	|	УстанавливатьВДиалоге КАК УстанавливатьВДиалоге,
	|	ТипОбъекта КАК ТипОбъекта,
	|	ТипОбъекта.Наименование КАК ТипОбъектаНаименование,
	|	ПередаватьПараметрПриВыгрузке КАК ПередаватьПараметрПриВыгрузке,
	|	ПравилоКонвертации КАК ПравилоКонвертации
	|ИЗ Справочник.Конвертации.Параметры
	|ГДЕ Ссылка = &Конвертация";
	#КонецУдаления
	#Вставка
	Запрос.Текст = "ВЫБРАТЬ
	|	Параметр КАК Имя,
	|	ОписаниеПараметра КАК ОписаниеПараметра,
	|	ИспользуетсяПриЗагрузке КАК ИспользуетсяПриЗагрузке,
	|	УстанавливатьВДиалоге КАК УстанавливатьВДиалоге,
	|	ТипОбъекта КАК ТипОбъекта,
	|	ТипОбъекта.Наименование КАК ТипОбъектаНаименование,
	|	ПередаватьПараметрПриВыгрузке КАК ПередаватьПараметрПриВыгрузке,
	|	ПравилоКонвертации КАК ПравилоКонвертации
	|ИЗ Справочник.Конвертации.Параметры
	|ГДЕ Ссылка = &Конвертация";
	#КонецВставки
	Запрос.УстановитьПараметр("Конвертация", ОбщиеПеременные.Конвертация);
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл

		мЗаписьXML.ЗаписатьНачалоЭлемента("Параметр");

		УстановитьАтрибут("Имя",                   СокрЛП(Выборка.Имя), мЗаписьXML);
		#Удаление
		УстановитьАтрибут("Наименование",          СокрЛП(Выборка.Имя), мЗаписьXML);
		#КонецУдаления
		#Вставка
		Если ЗначениеЗаполнено(Выборка.ОписаниеПараметра) Тогда
			УстановитьАтрибут("Наименование", СокрЛП(Выборка.ОписаниеПараметра), мЗаписьXML);
		Иначе
			УстановитьАтрибут("Наименование", СокрЛП(Выборка.Имя), мЗаписьXML);
		КонецЕсли;
		#КонецВставки
		УстановитьАтрибут("ИспользуетсяПриЗагрузке", XMLСтрока(Выборка.ИспользуетсяПриЗагрузке), мЗаписьXML);
		УстановитьАтрибут("УстанавливатьВДиалоге", XMLСтрока(Выборка.УстанавливатьВДиалоге), мЗаписьXML);
		Если ЗначениеЗаполнено(Выборка.ТипОбъекта) Тогда
			УстановитьАтрибут("ТипЗначения", Выборка.ТипОбъектаНаименование, мЗаписьXML);
		КонецЕсли;

		УстановитьАтрибут("ПередаватьПараметрПриВыгрузке", XMLСтрока(Выборка.ПередаватьПараметрПриВыгрузке), мЗаписьXML);

		Если ЗначениеЗаполнено(Выборка.ПравилоКонвертации) Тогда
			УстановитьАтрибут("ПравилоКонвертации", XMLСтрока(Выборка.ПравилоКонвертации), мЗаписьXML);
		КонецЕсли;

		мЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЦикла;
	мЗаписьXML.ЗаписатьКонецЭлемента();

КонецПроцедуры

#КонецОбласти

#КонецЕсли