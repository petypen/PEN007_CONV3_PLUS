
&ИзменениеИКонтроль("ИнициализацияТаблицыПКО")
Процедура PEN007_ИнициализацияТаблицыПКО(ТабПКО)

	Колонки = ТабПКО.Колонки;

	Колонки.Добавить("ЭтоГруппа", одОписаниеТипа("Булево"));

	Колонки.Добавить("Имя");
	Колонки.Добавить("Наименование");
	Колонки.Добавить("Порядок");
	#Вставка
	Колонки.Добавить("Описание");
	#КонецВставки

	Колонки.Добавить("СпособВыгрузки");

	Колонки.Добавить("Источник");
	Колонки.Добавить("Приемник");

	Колонки.Добавить("ПередВыгрузкой");
	Колонки.Добавить("ПриВыгрузке");
	Колонки.Добавить("ПослеВыгрузки");
	Колонки.Добавить("ПослеВыгрузкиВФайл");

	Колонки.Добавить("ЕстьОбработчикПередВыгрузкой",	одОписаниеТипа("Булево"));
	Колонки.Добавить("ЕстьОбработчикПриВыгрузке",		одОписаниеТипа("Булево"));
	Колонки.Добавить("ЕстьОбработчикПослеВыгрузки",		одОписаниеТипа("Булево"));
	Колонки.Добавить("ЕстьОбработчикПослеВыгрузкиВФайл",одОписаниеТипа("Булево"));

	Колонки.Добавить("ПередЗагрузкой");
	Колонки.Добавить("ПриЗагрузке");
	Колонки.Добавить("ПослеЗагрузки");

	Колонки.Добавить("ЕстьОбработчикПередЗагрузкой", одОписаниеТипа("Булево"));
	Колонки.Добавить("ЕстьОбработчикПриЗагрузке",    одОписаниеТипа("Булево"));
	Колонки.Добавить("ЕстьОбработчикПослеЗагрузки",  одОписаниеТипа("Булево"));
	Колонки.Добавить("ЕстьОбработчикПоследовательностейПолейПоиска",  одОписаниеТипа("Булево"));

	Колонки.Добавить("Свойства", одОписаниеТипа("ДеревоЗначений"));

	Колонки.Добавить("Значения", одОписаниеТипа("ДеревоЗначений"));

	Колонки.Добавить("НастройкаВариантовПоискаОбъектов", одОписаниеТипа("ТаблицаЗначений"));

	Колонки.Добавить("ВыгружатьПредставлениеИсточника",		одОписаниеТипа("Булево"));

	Колонки.Добавить("НеЗамещать",					      одОписаниеТипа("Булево"));
	Колонки.Добавить("НеЗапоминатьВыгруженные",           одОписаниеТипа("Булево"));
    Колонки.Добавить("СинхронизироватьПоИдентификатору", одОписаниеТипа("Булево"));
	Колонки.Добавить("ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли", одОписаниеТипа("Булево"));
    Колонки.Добавить("НеВыгружатьОбъектыСвойствПоСсылкам", одОписаниеТипа("Булево"));
	Колонки.Добавить("НеСоздаватьОбъектВПриемникеЕслиНеНайденПоПолямПоиска", одОписаниеТипа("Булево"));
	Колонки.Добавить("ИспользоватьБыстрыйПоискПриЗагрузке", одОписаниеТипа("Булево"));
	Колонки.Добавить("ВыгружатьОбъектТолькоПриНаличииНаНегоСсылки", одОписаниеТипа("Булево"));
	Колонки.Добавить("ГенерироватьНовыйНомерИлиКодЕслиНеУказан", одОписаниеТипа("Булево"));
	Колонки.Добавить("ПриПереносеОбъектаПоСсылкеУстанавливатьТолькоGIUD", одОписаниеТипа("Булево"));
	Колонки.Добавить("НеЗамещатьОбъектСозданныйВИнформационнойБазеПриемнике", одОписаниеТипа("Булево"));

	Колонки.Добавить("ПоследовательностьПолейПоиска");
	Колонки.Добавить("ПриоритетОбъектовОбмена");

КонецПроцедуры

&ИзменениеИКонтроль("ЗагрузитьПКО")
Процедура PEN007_ЗагрузитьПКО(ПравилаОбмена, НоваяСтрока, ОбщиеПеременные)

	Пока ПравилаОбмена.Прочитать() Цикл

		ИмяУзла = ПравилаОбмена.ЛокальноеИмя;
		ТипУзла = ПравилаОбмена.ТипУзла;

		Если      ИмяУзла = "Код" Тогда
			Значение = одЗначениеЭлемента(ПравилаОбмена);
			НоваяСтрока.Имя = Значение;
		ИначеЕсли ИмяУзла = "Наименование" Тогда
			НоваяСтрока.Наименование = одЗначениеЭлемента(ПравилаОбмена);
			#Вставка
			НоваяСтрока.Описание = одЗначениеЭлемента(ПравилаОбмена);
			#КонецВставки
		ИначеЕсли ИмяУзла = "Порядок" Тогда
			НоваяСтрока.Порядок = одЗначениеЭлемента(ПравилаОбмена, Тип("Число"));
		ИначеЕсли ИмяУзла = "СпособВыгрузки" Тогда
			НоваяСтрока.СпособВыгрузки = одЗначениеЭлемента(ПравилаОбмена);
		ИначеЕсли ИмяУзла = "НеЗапоминатьВыгруженные" Тогда
			НоваяСтрока.НеЗапоминатьВыгруженные = одЗначениеЭлемента(ПравилаОбмена, Тип("Булево"));
		ИначеЕсли ИмяУзла = "СинхронизироватьПоИдентификатору" Тогда
			НоваяСтрока.СинхронизироватьПоИдентификатору = одЗначениеЭлемента(ПравилаОбмена, Тип("Булево"));
		ИначеЕсли ИмяУзла = "ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли" Тогда
			НоваяСтрока.ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли = одЗначениеЭлемента(ПравилаОбмена, Тип("Булево"));
		ИначеЕсли ИмяУзла = "НеВыгружатьОбъектыСвойствПоСсылкам" Тогда
			НоваяСтрока.НеВыгружатьОбъектыСвойствПоСсылкам = одЗначениеЭлемента(ПравилаОбмена, Тип("Булево"));
		ИначеЕсли ИмяУзла = "НеСоздаватьЕслиНеНайден" Тогда
			НоваяСтрока.НеСоздаватьОбъектВПриемникеЕслиНеНайденПоПолямПоиска = одЗначениеЭлемента(ПравилаОбмена, Тип("Булево"));
		ИначеЕсли ИмяУзла = "ИспользоватьБыстрыйПоискПриЗагрузке" Тогда
			НоваяСтрока.ИспользоватьБыстрыйПоискПриЗагрузке = одЗначениеЭлемента(ПравилаОбмена, Тип("Булево"));
		ИначеЕсли ИмяУзла = "ГенерироватьНовыйНомерИлиКодЕслиНеУказан" Тогда
			НоваяСтрока.ГенерироватьНовыйНомерИлиКодЕслиНеУказан = одЗначениеЭлемента(ПравилаОбмена, Тип("Булево"));
		ИначеЕсли ИмяУзла = "ВыгружатьОбъектТолькоПриНаличииНаНегоСсылки" Тогда
			НоваяСтрока.ВыгружатьОбъектТолькоПриНаличииНаНегоСсылки = одЗначениеЭлемента(ПравилаОбмена, Тип("Булево"));
		ИначеЕсли ИмяУзла = "ПриПереносеОбъектаПоСсылкеУстанавливатьТолькоGIUD" Тогда
			НоваяСтрока.ПриПереносеОбъектаПоСсылкеУстанавливатьТолькоGIUD = одЗначениеЭлемента(ПравилаОбмена, Тип("Булево"));
		ИначеЕсли ИмяУзла = "НеЗамещатьОбъектСозданныйВИнформационнойБазеПриемнике" Тогда
			НоваяСтрока.НеЗамещатьОбъектСозданныйВИнформационнойБазеПриемнике = одЗначениеЭлемента(ПравилаОбмена, Тип("Булево"));
		ИначеЕсли ИмяУзла = "РегистрироватьОбъектНаУзлеОтправителе" Тогда // не используется
			одПропустить(ПравилаОбмена);
		ИначеЕсли ИмяУзла = "НеЗамещать" Тогда
			НоваяСтрока.НеЗамещать = одЗначениеЭлемента(ПравилаОбмена, Тип("Булево"));
		ИначеЕсли ИмяУзла = "Приемник" Тогда
			НоваяСтрока.Приемник = одЗначениеЭлемента(ПравилаОбмена);
		ИначеЕсли ИмяУзла = "Источник" Тогда
			НоваяСтрока.Источник	= одЗначениеЭлемента(ПравилаОбмена);
		ИначеЕсли ИмяУзла = "ПриоритетОбъектовОбмена" Тогда
			НоваяСтрока.ПриоритетОбъектовОбмена = одЗначениеЭлемента(ПравилаОбмена);

		// Настройки вариантов поиска
		ИначеЕсли ИмяУзла = "НастройкаВариантовПоискаОбъектов" Тогда
			НоваяСтрока.НастройкаВариантовПоискаОбъектов = ОбщиеПеременные.ТаблицаНастроекВариантовПоиска.Скопировать();
			ЗагрузитьНастройкиВариантовПоиска(ПравилаОбмена, НоваяСтрока.НастройкаВариантовПоискаОбъектов);

		// Свойства

		ИначеЕсли ИмяУзла = "Свойства" Тогда
			НоваяСтрока.Свойства		= ОбщиеПеременные.ТаблицаПравилКонвертацииСвойств.Скопировать();
			ЗагрузитьСвойства(ПравилаОбмена, НоваяСтрока.Свойства, ОбщиеПеременные);

		// Значения

		ИначеЕсли ИмяУзла = "Значения" Тогда
            НоваяСтрока.Значения		= ОбщиеПеременные.ТаблицаПравилКонвертацииЗначений.Скопировать();
			ЗагрузитьЗначения(ПравилаОбмена, НоваяСтрока.Значения, НоваяСтрока.Источник);

		// Обработчики событий

		ИначеЕсли ИмяУзла = "ПередВыгрузкой" Тогда
			НоваяСтрока.ПередВыгрузкой = одЗначениеЭлемента(ПравилаОбмена);
			НоваяСтрока.ЕстьОбработчикПередВыгрузкой = Не ПустаяСтрока(НоваяСтрока.ПередВыгрузкой);
		ИначеЕсли ИмяУзла = "ПриВыгрузке" Тогда
			НоваяСтрока.ПриВыгрузке = одЗначениеЭлемента(ПравилаОбмена);
			НоваяСтрока.ЕстьОбработчикПриВыгрузке    = Не ПустаяСтрока(НоваяСтрока.ПриВыгрузке);
		ИначеЕсли ИмяУзла = "ПослеВыгрузки" Тогда
			НоваяСтрока.ПослеВыгрузки = одЗначениеЭлемента(ПравилаОбмена);
			НоваяСтрока.ЕстьОбработчикПослеВыгрузки  = Не ПустаяСтрока(НоваяСтрока.ПослеВыгрузки);
		ИначеЕсли ИмяУзла = "ПослеВыгрузкиВФайл" Тогда
			НоваяСтрока.ПослеВыгрузкиВФайл = одЗначениеЭлемента(ПравилаОбмена);
			НоваяСтрока.ЕстьОбработчикПослеВыгрузкиВФайл  = Не ПустаяСтрока(НоваяСтрока.ПослеВыгрузкиВФайл);
		ИначеЕсли ИмяУзла = "ПередЗагрузкой" Тогда
			НоваяСтрока.ПередЗагрузкой               = одЗначениеЭлемента(ПравилаОбмена);
			НоваяСтрока.ЕстьОбработчикПередЗагрузкой = Не ПустаяСтрока(НоваяСтрока.ПередЗагрузкой);
		ИначеЕсли ИмяУзла = "ПриЗагрузке" Тогда
			НоваяСтрока.ПриЗагрузке               = одЗначениеЭлемента(ПравилаОбмена);
			НоваяСтрока.ЕстьОбработчикПриЗагрузке = Не ПустаяСтрока(НоваяСтрока.ПриЗагрузке);
		ИначеЕсли ИмяУзла = "ПослеЗагрузки" Тогда
			НоваяСтрока.ПослеЗагрузки               = одЗначениеЭлемента(ПравилаОбмена);
			НоваяСтрока.ЕстьОбработчикПослеЗагрузки = Не ПустаяСтрока(НоваяСтрока.ПослеЗагрузки);
		ИначеЕсли ИмяУзла = "ПоследовательностьПолейПоиска" Тогда
			НоваяСтрока.ПоследовательностьПолейПоиска               = одЗначениеЭлемента(ПравилаОбмена);
			НоваяСтрока.ЕстьОбработчикПоследовательностейПолейПоиска = Не ПустаяСтрока(НоваяСтрока.ПоследовательностьПолейПоиска);

		// Выход
		ИначеЕсли (ИмяУзла = "Правило") И (ТипУзла = ТипУзлаXML.КонецЭлемента) Тогда
			Прервать;
		КонецЕсли;

	КонецЦикла;
КонецПроцедуры

&ИзменениеИКонтроль("ЗагрузитьПВД")
Процедура PEN007_ЗагрузитьПВД(ПравилаОбмена, НоваяСтрока)

	НоваяСтрока.Отключить = одАтрибут(ПравилаОбмена, "Отключить", Тип("Булево"));

	Пока ПравилаОбмена.Прочитать() Цикл
		ИмяУзла = ПравилаОбмена.ЛокальноеИмя;
		ТипУзла = ПравилаОбмена.ТипУзла;
		Если      ИмяУзла = "Код" Тогда
			НоваяСтрока.Имя = одЗначениеЭлемента(ПравилаОбмена);

		ИначеЕсли ИмяУзла = "Наименование" Тогда
			НоваяСтрока.Наименование = одЗначениеЭлемента(ПравилаОбмена);
			#Вставка
			НоваяСтрока.Описание = одЗначениеЭлемента(ПравилаОбмена);
			#КонецВставки

		ИначеЕсли ИмяУзла = "Порядок" Тогда
			НоваяСтрока.Порядок = одЗначениеЭлемента(ПравилаОбмена, Тип("Число"));

		ИначеЕсли ИмяУзла = "Описание" Тогда
			НоваяСтрока.Описание = одЗначениеЭлемента(ПравилаОбмена);

		ИначеЕсли ИмяУзла = "Комментарий" Тогда
			НоваяСтрока.Комментарий = одЗначениеЭлемента(ПравилаОбмена);

		ИначеЕсли ИмяУзла = "СпособОтбораДанных" Тогда
			НоваяСтрока.СпособОтбораДанных = одЗначениеЭлемента(ПравилаОбмена);

		ИначеЕсли ИмяУзла = "ВыбиратьДанныеДляВыгрузкиОднимЗапросом" Тогда
			НоваяСтрока.ВыбиратьДанныеДляВыгрузкиОднимЗапросом = одЗначениеЭлемента(ПравилаОбмена, Тип("Булево"));

		ИначеЕсли ИмяУзла = "НеВыгружатьОбъектыСозданныеВБазеПриемнике" Тогда
			НоваяСтрока.НеВыгружатьОбъектыСозданныеВБазеПриемнике = одЗначениеЭлемента(ПравилаОбмена, Тип("Булево"));

		ИначеЕсли ИмяУзла = "ОбъектВыборки" Тогда
			НоваяСтрока.ОбъектВыборки = одЗначениеЭлемента(ПравилаОбмена);

		ИначеЕсли ИмяУзла = "КодПравилаКонвертации" Тогда
			НоваяСтрока.ПравилоКонвертации = одЗначениеЭлемента(ПравилаОбмена);

		// Обработчики событий

		ИначеЕсли ИмяУзла = "ПередОбработкойПравила" Тогда
			НоваяСтрока.ПередОбработкой = одЗначениеЭлемента(ПравилаОбмена);

		ИначеЕсли ИмяУзла = "ПослеОбработкиПравила" Тогда
			НоваяСтрока.ПослеОбработки = одЗначениеЭлемента(ПравилаОбмена);

		ИначеЕсли ИмяУзла = "ПередВыгрузкойОбъекта" Тогда
			НоваяСтрока.ПередВыгрузкой = одЗначениеЭлемента(ПравилаОбмена);

		ИначеЕсли ИмяУзла = "ПослеВыгрузкиОбъекта" Тогда
			НоваяСтрока.ПослеВыгрузки = одЗначениеЭлемента(ПравилаОбмена);


		// Выход

		ИначеЕсли (ИмяУзла = "Правило") И (ТипУзла = ТипУзлаXML.КонецЭлемента) Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;


	Если ПустаяСтрока(НоваяСтрока.Наименование) Тогда
		НоваяСтрока.Наименование = НоваяСтрока.Имя;
	КонецЕсли;

КонецПроцедуры

&ИзменениеИКонтроль("ЗагрузитьПараметры")
Процедура PEN007_ЗагрузитьПараметры(ПравилаОбмена, ОбщиеПеременные)
	ТабПараметры = Новый ТаблицаЗначений;
	Колонки = ТабПараметры.Колонки;

	Колонки.Добавить("Параметр");
	#Вставка
	Колонки.Добавить("ОписаниеПараметра");
	#КонецВставки
	Колонки.Добавить("УстанавливатьВДиалоге");
	Колонки.Добавить("ТипОбъекта");
	Колонки.Добавить("ИспользуетсяПриЗагрузке");
	Колонки.Добавить("ПередаватьПараметрПриВыгрузке");
	Колонки.Добавить("АлгоритмПослеЗагрузкиПараметра");
	Колонки.Добавить("ПравилоКонвертации");

	Пока ПравилаОбмена.Прочитать() Цикл
		ИмяУзла = ПравилаОбмена.ЛокальноеИмя;
		ТипУзла = ПравилаОбмена.ТипУзла;

		Если ИмяУзла = "Параметр" И ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда

			// Загрузка по версии правил 2.01
			НоваяСтрока                       = ТабПараметры.Добавить();
			НоваяСтрока.Параметр              = одАтрибут(ПравилаОбмена, "Имя");
			#Вставка
			НоваяСтрока.ОписаниеПараметра = одАтрибут(ПравилаОбмена, "Наименование");
			#КонецВставки
			НоваяСтрока.УстанавливатьВДиалоге = одАтрибут(ПравилаОбмена, "УстанавливатьВДиалоге");
			НоваяСтрока.ТипОбъекта            = Строка(ПравилаОбмена.ПолучитьАтрибут("ТипЗначения"));
			НоваяСтрока.ИспользуетсяПриЗагрузке = одАтрибут(ПравилаОбмена, "ИспользуетсяПриЗагрузке", Тип("Булево"));
			НоваяСтрока.ПередаватьПараметрПриВыгрузке = одАтрибут(ПравилаОбмена, "ПередаватьПараметрПриВыгрузке", Тип("Булево"));
			НоваяСтрока.АлгоритмПослеЗагрузкиПараметра  = одАтрибут(ПравилаОбмена, "ПослеЗагрузкиПараметра");
			НоваяСтрока.ПравилоКонвертации = одАтрибут(ПравилаОбмена, "ПравилоКонвертации");

		ИначеЕсли (ТипУзла = ТипУзлаXML.Текст) Тогда

			// Для совместимости с версией правил 2.0 используем загрузку из строки
			СтрокаПараметров = ПравилаОбмена.Значение;
			Для каждого Пар Из СтрРазделить(СтрокаПараметров,, Ложь) Цикл
				НоваяСтрока                       = ТабПараметры.Добавить();
				НоваяСтрока.Параметр              = Пар;
				НоваяСтрока.УстанавливатьВДиалоге = ЛОЖЬ;
				НоваяСтрока.ТипОбъекта            = "";
				НоваяСтрока.ИспользуетсяПриЗагрузке = Истина;
				НоваяСтрока.ПередаватьПараметрПриВыгрузке = ЛОЖЬ;
				НоваяСтрока.ПравилоКонвертации = "";
				НоваяСтрока.АлгоритмПослеЗагрузкиПараметра = "";
			КонецЦикла;

		ИначеЕсли (ИмяУзла = "Параметры") И (ТипУзла = ТипУзлаXML.КонецЭлемента) Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	ОбщиеПеременные.Вставить("Параметры", ТабПараметры);
КонецПроцедуры